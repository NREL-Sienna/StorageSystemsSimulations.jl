var documenterSearchIndex = {"docs":
[{"location":"code_base_developer_guide/developer/#Guidelines-for-Developers","page":"Guidelines for Developers","title":"Guidelines for Developers","text":"","category":"section"},{"location":"code_base_developer_guide/developer/","page":"Guidelines for Developers","title":"Guidelines for Developers","text":"In order to contribute to StorageSystemsSimulations.jl repository please read the following sections of InfrastructureSystems.jl documentation in detail:","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Guidelines for Developers","title":"Guidelines for Developers","text":"Style Guide\nContributing Guidelines","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Guidelines for Developers","title":"Guidelines for Developers","text":"Pull requests are always welcome to fix bugs or add additional modeling capabilities.","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Guidelines for Developers","title":"Guidelines for Developers","text":"All the code contributions need to include tests with a minimum coverage of 70%","category":"page"},{"location":"quick_start_guide/#Quick-Start-Guide","page":"Quick Start Guide","title":"Quick Start Guide","text":"","category":"section"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Julia: If this is your first time using Julia visit our Introduction to Julia and the official Getting started with Julia.\nPackage Installation: If you want to install packages check the Package Manager instructions, or you can refer to the StorageSystemsSimulations installation instructions.\nPowerSystems: PowerSystems.jl manages the data and is a fundamental dependency of PowerSimulations.jl. Check the PowerSystems.jl Basics Tutorial and PowerSystems.jl documentation to understand how the inputs to the models are organized.\nDataset Library: If you don't have a data set to start using StorageSystemsSimulations.jl check the test systems provided in PowerSystemCaseBuilder.jl","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"tip: Tip\nIf you need to develop a dataset for a simulation check the PowerSystems.jl Tutorials on how to parse data and attach time series","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Tutorial: If you are eager to run your first simulation visit the tutorial section of the documentation","category":"page"},{"location":"tutorials/single_stage_model/#op_problem_tutorial","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"Originally Contributed by: Jose Daniel Lara","category":"page"},{"location":"tutorials/single_stage_model/#Introduction","page":"Solving an operation with StorageSystemSimulations","title":"Introduction","text":"","category":"section"},{"location":"tutorials/single_stage_model/#Load-Packages","page":"Solving an operation with StorageSystemSimulations","title":"Load Packages","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"using PowerSystems\nusing PowerSimulations\nusing StorageSystemsSimulations\nusing PowerSystemCaseBuilder\nusing HiGHS # solver","category":"page"},{"location":"tutorials/single_stage_model/#Data","page":"Solving an operation with StorageSystemSimulations","title":"Data","text":"","category":"section"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"note: Note\nPowerSystemCaseBuilder.jl is a helper library that makes it easier to reproduce examples in the documentation and tutorials. Normally you would pass your local files to create the system data instead of calling the function build_system. For more details visit PowerSystemCaseBuilder Documentation","category":"page"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"c_sys5_bat = build_system(\n    PSITestSystems,\n    \"c_sys5_bat_ems\";\n    add_single_time_series=true,\n    add_reserves=true,\n)\norcd = get_component(ReserveDemandCurve, c_sys5_bat, \"ORDC1\")\nset_available!(orcd, false)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"batt = get_component(EnergyReservoirStorage, c_sys5_bat, \"Bat2\")\n\noperation_cost = get_operation_cost(batt)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"template_uc = ProblemTemplate(PTDFPowerModel)\nset_device_model!(template_uc, ThermalStandard, ThermalStandardUnitCommitment)\nset_device_model!(template_uc, RenewableDispatch, RenewableFullDispatch)\nset_device_model!(template_uc, PowerLoad, StaticPowerLoad)\nset_device_model!(template_uc, Line, StaticBranch)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"storage_model = DeviceModel(\n    EnergyReservoirStorage,\n    StorageDispatchWithReserves;\n    attributes=Dict(\n        \"reservation\" => true,\n        \"energy_target\" => false,\n        \"cycling_limits\" => false,\n        \"regularization\" => true,\n    ),\n)\nset_device_model!(template_uc, storage_model)","category":"page"},{"location":"tutorials/single_stage_model/","page":"Solving an operation with StorageSystemSimulations","title":"Solving an operation with StorageSystemSimulations","text":"set_service_model!(template_uc, ServiceModel(VariableReserve{ReserveUp}, RangeReserve))\nset_service_model!(template_uc, ServiceModel(VariableReserve{ReserveDown}, RangeReserve))","category":"page"},{"location":"code_base_developer_guide/internals/","page":"Internals","title":"Internals","text":"CollapsedDocStrings = true","category":"page"},{"location":"code_base_developer_guide/internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"code_base_developer_guide/internals/","page":"Internals","title":"Internals","text":"Modules = [StorageSystemsSimulations]\nPublic = false","category":"page"},{"location":"code_base_developer_guide/internals/#StorageSystemsSimulations.StateofChargeTargetConstraint","page":"Internals","title":"StorageSystemsSimulations.StateofChargeTargetConstraint","text":"Struct to create the state of charge target constraint at the end of period. Used when the attribute energy_target = true.\n\nThe specified constraint is formulated as:\n\ne^st_T + e^st+ - e^st- = E^st_T\n\n\n\n\n\n","category":"type"},{"location":"code_base_developer_guide/internals/#StorageSystemsSimulations.StorageRegularizationConstraintCharge","page":"Internals","title":"StorageSystemsSimulations.StorageRegularizationConstraintCharge","text":"Struct to specify the auxiliary constraints for regularization terms in the objective function for the charge variable. Used when the attribute regularization = true.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) le z^st ch_t forall t in 2dots T\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) ge -z^st ch_t forall t in 2dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"code_base_developer_guide/internals/#StorageSystemsSimulations.StorageRegularizationConstraintDischarge","page":"Internals","title":"StorageSystemsSimulations.StorageRegularizationConstraintDischarge","text":"Struct to specify the auxiliary constraints for regularization terms in the objective function for the discharge variable. Used when the attribute regularization = true.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n left(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) -left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_\textdn R^*_pt sb_stdptright) le z^st ds_t forall t in 2dots T\n left(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) -left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_\textdn R^*_pt sb_stdptright) ge -z^st ds_t forall t in 2dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"code_base_developer_guide/internals/#StorageSystemsSimulations.StorageRegularizationVariable","page":"Internals","title":"StorageSystemsSimulations.StorageRegularizationVariable","text":"Abstract used for StorageRegularization variables\n\n\n\n\n\n","category":"type"},{"location":"code_base_developer_guide/internals/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.EnergyBalanceConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, StorageDispatchWithReserves}, PowerSimulations.NetworkModel{X}}} where {V<:Storage, X<:PowerModels.AbstractPowerModel}","page":"Internals","title":"PowerSimulations.add_constraints!","text":"add_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::Type{PowerSimulations.EnergyBalanceConstraint},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{V<:Storage},\n    model::PowerSimulations.DeviceModel{V<:Storage, StorageDispatchWithReserves},\n    network_model::PowerSimulations.NetworkModel{X<:PowerModels.AbstractPowerModel}\n)\n\n\nAdd Energy Balance Constraints for AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"code_base_developer_guide/internals/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{ReserveDischargeConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, StorageDispatchWithReserves}, PowerSimulations.NetworkModel{X}}} where {V<:Storage, X<:PowerModels.AbstractPowerModel}","page":"Internals","title":"PowerSimulations.add_constraints!","text":"add_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::Type{ReserveDischargeConstraint},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{V<:Storage},\n    model::PowerSimulations.DeviceModel{V<:Storage, StorageDispatchWithReserves},\n    network_model::PowerSimulations.NetworkModel{X<:PowerModels.AbstractPowerModel}\n)\n\n\nAdd Energy Balance Constraints for AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"code_base_developer_guide/internals/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel, InfrastructureSystems.FlattenIteratorWrapper{T}, EnergyLimitFeedforward}} where T<:Component","page":"Internals","title":"PowerSimulations.add_feedforward_constraints!","text":"add_feedforward_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::PowerSimulations.DeviceModel,\n    devices::InfrastructureSystems.FlattenIteratorWrapper{T<:Component},\n    ff::EnergyLimitFeedforward\n)\n\n\n    add_feedforward_constraints(container::OptimizationContainer,\n                    cons_name::Symbol,\n                    param_reference,\n                    var_key::VariableKey)\n\nConstructs a parameterized integral limit constraint to implement feedforward from other models. The Parameters are initialized using the upper boundary values of the provided variables.\n\nsum(variable[var_name, t] for t in 1:affected_periods)/affected_periods <= param_reference[var_name]\n\nLaTeX\n\nsum_t x leq param^max\n\nArguments\n\ncontainer::OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::FixValueFeedforward : a instance of the FixValue Feedforward\n\n\n\n\n\n","category":"method"},{"location":"code_base_developer_guide/internals/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{U}, Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel{T, U}, InfrastructureSystems.FlattenIteratorWrapper{T}, EnergyTargetFeedforward}} where {T<:Storage, U<:StorageSystemsSimulations.AbstractStorageFormulation}","page":"Internals","title":"PowerSimulations.add_feedforward_constraints!","text":"add_feedforward_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::PowerSimulations.DeviceModel{T<:Storage, U<:StorageSystemsSimulations.AbstractStorageFormulation},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{T<:Storage},\n    ff::EnergyTargetFeedforward\n)\n\n\n    add_feedforward_constraints(\n        container::OptimizationContainer,\n        ::DeviceModel,\n        devices::IS.FlattenIteratorWrapper{T},\n        ff::EnergyTargetFeedforward,\n    ) where {T <: PSY.Component}\n\nConstructs a equality constraint to a fix a variable in one model using the variable value from other model results.\n\nvariable[var_name, t] + slack[var_name, t] >= param[var_name, t]\n\nLaTeX\n\nx + slack = param\n\nArguments\n\ncontainer::OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::EnergyTargetFeedforward : a instance of the EnergyTarget Feedforward\n\n\n\n\n\n","category":"method"},{"location":"code_base_developer_guide/internals/#PowerSimulations.get_min_max_limits-Tuple{Storage, Type{StateofChargeLimitsConstraint}, Type{<:StorageSystemsSimulations.AbstractStorageFormulation}}","page":"Internals","title":"PowerSimulations.get_min_max_limits","text":"get_min_max_limits(\n    d::Storage,\n    _::Type{StateofChargeLimitsConstraint},\n    _::Type{<:StorageSystemsSimulations.AbstractStorageFormulation}\n) -> NamedTuple{(:min, :max), <:Tuple{Any, Any}}\n\n\nMin and max limits for Energy Capacity Constraint and AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"api/StorageSystemsSimulations/#Public-API","page":"API Reference","title":"Public API","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"CurrentModule = StorageSystemsSimulations\nDocTestSetup  = quote\n    using StorageSystemsSimulations\nend","category":"page"},{"location":"api/StorageSystemsSimulations/#vars","page":"API Reference","title":"Variables","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"AncillaryServiceVariableDischarge\nAncillaryServiceVariableCharge\nStorageEnergyShortageVariable\nStorageEnergySurplusVariable\nStorageChargeCyclingSlackVariable\nStorageDischargeCyclingSlackVariable\nStorageRegularizationVariableCharge\nStorageRegularizationVariableDischarge","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.AncillaryServiceVariableDischarge","page":"API Reference","title":"StorageSystemsSimulations.AncillaryServiceVariableDischarge","text":"Ancillary service fraction assigned to Storage Discharging to product p\n\nDocs abbreviation: sb^std_pt\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.AncillaryServiceVariableCharge","page":"API Reference","title":"StorageSystemsSimulations.AncillaryServiceVariableCharge","text":"Ancillary service fraction assigned to Storage Charging to product p\n\nDocs abbreviation: sb^stc_pt\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergyShortageVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergyShortageVariable","text":"Slack variable for energy storage levels < target storage levels\n\nDocs abbreviation: e^st-\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergySurplusVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergySurplusVariable","text":"Slack variable for energy storage levels > target storage levels\n\nDocs abbreviation: e^st+\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageChargeCyclingSlackVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageChargeCyclingSlackVariable","text":"Slack variable for the cycling limits to allow for more charging usage than the allowed limited\n\nDocs nomenclature: c^ch-\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageDischargeCyclingSlackVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageDischargeCyclingSlackVariable","text":"Slack variable for the cycling limits to allow for more discharging usage than the allowed limited\n\nDocs nomenclature: c^ds-\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageRegularizationVariableCharge","page":"API Reference","title":"StorageSystemsSimulations.StorageRegularizationVariableCharge","text":"Slack variable for energy storage levels > target storage levels\n\nDocs nomenclature: z^st ch\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageRegularizationVariableDischarge","page":"API Reference","title":"StorageSystemsSimulations.StorageRegularizationVariableDischarge","text":"Slack variable for energy storage levels > target storage levels\n\nDocs abbreviation: z^st ds\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#aux_vars","page":"API Reference","title":"Auxiliary Variables","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"StorageEnergyOutput","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergyOutput","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergyOutput","text":"Auxiliary Variable for Storage Models that solve for total energy output\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#cons","page":"API Reference","title":"Constraints","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"StateofChargeLimitsConstraint\nStorageCyclingCharge\nStorageCyclingDischarge\nReserveCoverageConstraint\nReserveCoverageConstraintEndOfPeriod\nReserveCompleteCoverageConstraint\nReserveCompleteCoverageConstraintEndOfPeriod\nStorageTotalReserveConstraint\nReserveDischargeConstraint\nReserveChargeConstraint","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StateofChargeLimitsConstraint","page":"API Reference","title":"StorageSystemsSimulations.StateofChargeLimitsConstraint","text":"Struct to create the state of charge constraint limits.\n\nThe specified constraint is formulated as:\n\nE_st^min le e^st_t le E_st^max quad forall t in 1dots T\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageCyclingCharge","page":"API Reference","title":"StorageSystemsSimulations.StorageCyclingCharge","text":"Struct to create the storage cycling limits for the charge variable. Used when cycling_limits = true.\n\nThe specified constraint is formulated as:\n\nsum_t in mathcalT left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t right)eta^ch_st Delta t - c^ch- leq C_st E^max_st\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageCyclingDischarge","page":"API Reference","title":"StorageSystemsSimulations.StorageCyclingDischarge","text":"Struct to create the storage cycling limits for the discharge variable. Used when cycling_limits = true.\n\nThe specified constraint is formulated as:\n\nsum_t in mathcalT left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_tright)frac1eta^ds_st Delta t - c^ds- leq C_st E^max_st\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveCoverageConstraint","page":"API Reference","title":"StorageSystemsSimulations.ReserveCoverageConstraint","text":"Struct to specify the individual product ancillary service coverage at the beginning of the period for charge and discharge variables.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0 quad forall p in mathcalP^as_dn \n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t-1 quad forall p in mathcalP^as_dn  forall t in 2dots T \n sb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0 - E^min_st quad forall p in mathcalP^as_up \n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1 - E^min_st quad forall p in mathcalP^as_up  forall t in 2dots T \nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveCoverageConstraintEndOfPeriod","page":"API Reference","title":"StorageSystemsSimulations.ReserveCoverageConstraintEndOfPeriod","text":"Struct to specify the individual product ancillary service coverage at the end of the period for charge and discharge variables.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t quad forall p in mathcalP^as_dn forall t in 1dots T \n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st quad forall p in mathcalP^as_up forall t in 1dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveCompleteCoverageConstraint","page":"API Reference","title":"StorageSystemsSimulations.ReserveCompleteCoverageConstraint","text":"Struct to specify all products ancillary service coverage at the beginning of the period for charge and discharge variables. Used when the attribute complete_coverage = true.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n sum_p in mathcalP^textas_textdn sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0 \n sum_p in mathcalP^textas_textdn  sb_stcpt eta^ch_st N_p Delta t le E_st^max - e^st_t-1 quad forall t in 2dots T \n sum_p in mathcalP^textas_textup sb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0 - E^min_st \n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1- E^min_st quad forall t in 2dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveCompleteCoverageConstraintEndOfPeriod","page":"API Reference","title":"StorageSystemsSimulations.ReserveCompleteCoverageConstraintEndOfPeriod","text":"Struct to specify all products ancillary service coverage at the end of the period for charge and discharge variables. Used when the attribute complete_coverage = true.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n sum_p in mathcalP^textas_textdn  sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t quad forall t in 1dots T  \n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st quad forall t in 1dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageTotalReserveConstraint","page":"API Reference","title":"StorageSystemsSimulations.StorageTotalReserveConstraint","text":"Struct to specify an auxiliary constraint for adding charge and discharge into a single active power reserve variable.\n\nThe specified constraint is formulated as:\n\nsb_stc p t + sb_std p t = r_pt quad forall p in mathcalP forall t in 1dots T\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveDischargeConstraint","page":"API Reference","title":"StorageSystemsSimulations.ReserveDischargeConstraint","text":"Struct to specify the lower and upper bounds of the discharge variable considering reserves.\n\nThe specified constraints are formulated as:\n\nbeginalign*\n p^st ds_t + sum_p in mathcalP^textas_textup sb_stdpt leq textss^st_tP^maxds_st quad forall t in 1dots T \n p^st ds_t - sum_p in mathcalP^\textas_textdn sb_stdpt geq 0 quad forall t in 1dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.ReserveChargeConstraint","page":"API Reference","title":"StorageSystemsSimulations.ReserveChargeConstraint","text":"Struct to specify the lower and upper bounds of the charge variable considering reserves.\n\nThe specified constraints are formulated as:\n\nbeginalign*\np^st ch_t + sum_p in mathcalP^textas_textdn sb_stcpt leq (1 - textss^st_t)P^maxch_st quad forall t in 1dots T \n p^st ch_t - sum_p in mathcalP^textas_textup sb_stcpt geq 0 quad forall t in 1dots T\nendalign*\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#params","page":"API Reference","title":"Parameters","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"EnergyLimitParameter","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyLimitParameter","page":"API Reference","title":"StorageSystemsSimulations.EnergyLimitParameter","text":"Parameter to define energy limit\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#ffs","page":"API Reference","title":"FeedForwards","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"EnergyTargetFeedforward\nEnergyLimitFeedforward","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyTargetFeedforward","page":"API Reference","title":"StorageSystemsSimulations.EnergyTargetFeedforward","text":"Adds a constraint to enforce a minimum energy level target with a slack variable associated witha penalty term.\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyLimitFeedforward","page":"API Reference","title":"StorageSystemsSimulations.EnergyLimitFeedforward","text":"Adds a constraint to limit the sum of a variable over the number of periods to the source value\n\n\n\n\n\n","category":"type"},{"location":"#StorageSystemsSimulations.jl","page":"Welcome Page","title":"StorageSystemsSimulations.jl","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = StorageSystemsSimulations","category":"page"},{"location":"#Overview","page":"Welcome Page","title":"Overview","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"StorageSystemsSimulations.jl is a PowerSimulations.jl extension to support formulations and models related to energy storage.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"An Operational Storage Model can have multiple combinations of different restrictions. For instance, it might be relevant to a study to consider cycling limits or employ energy targets coming from a planning model. To manage all these variations StorageSystemsSimulations.jl heavily uses the DeviceModel attributes feature.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"For example, the formulation StorageDispatchWithReserves can be parametrized as follows when added to a PowerSimulations.jl model:","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"DeviceModel(\n    StorageType, # E.g. EnergyReservoirStorage\n    StorageDispatchWithReserves;\n    attributes=Dict(\n        \"reservation\" => true,\n        \"cycling_limits\" => false,\n        \"energy_target\" => false,\n        \"complete_coverage\" => false,\n        \"regularization\" => true,\n    ),\n    use_slacks=false,\n)","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"tip: Tip\nEach formulation can have different implementations for attributes. Carefully review the formulation library pages to understand how to configure the storage model according to your requirements","category":"page"},{"location":"#Installation","page":"Welcome Page","title":"Installation","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"The latest stable release of PowerSimulations can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"(@v1.10) pkg> add PowerSimulations StorageSystemsSimulations","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"For the current development version, \"checkout\" this package with","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"(@v1.10) pkg> add PowerSimulations StorageSystemsSimulations#main","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"An appropriate optimization solver is required for running StorageSystemsSimulations models. Refer to JuMP.jl solver's page to select the most appropriate for the application of interest.","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"StorageSystemsSimulations has been developed as part of the Scalable Integrated Infrastructure Planning (SIIP) initiative at the U.S. Department of Energy's National Renewable Energy Laboratory (NREL).","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#StorageDispatchWithReserves-Formulation","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves Formulation","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"StorageDispatchWithReserves","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#StorageSystemsSimulations.StorageDispatchWithReserves","page":"StorageDispatchWithReserves","title":"StorageSystemsSimulations.StorageDispatchWithReserves","text":"Formulation type to add storage formulation than can provide ancillary services. If a storage unit does not contribute to any service, then the variables and constraints related to services are ignored.\n\nThe formulation supports the following attributes. See Documentation for more details.\n\nDeviceModel(\n    StorageType, # E.g. EnergyReservoirStorage or GenericStorage\n    StorageDispatchWithReserves;\n    attributes=Dict(\n        \"reservation\" => true,\n        \"cycling_limits\" => false,\n        \"energy_target\" => false,\n        \"complete_coverage\" => false,\n        \"regularization\" => true,\n    ),\n    use_slacks=false,\n)\n\n\n\n\n\n","category":"type"},{"location":"formulation_library/StorageDispatchWithReserves/#Attributes","page":"StorageDispatchWithReserves","title":"Attributes","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"\"reservation\": Forces the storage to operate exclusively on charge or discharge mode through the entire operation interval. We recommend setting this to false for models with relatively longer time resolutions (e.g., 1-Hr) since the storage can take simultaneous charge or discharge positions on average over the period.\n\"cycling_limits\": This limits the storage's energy cycling. A single charging (discharging) cycle is fully charging (discharging) the storage once. The calculation uses the total energy charge/discharge and the number of cycles. Currently, the formulation only supports a fixed value per operation period. Additional variables for StorageChargeCyclingSlackVariable and StorageDischargeCyclingSlackVariable are included in the model if use_slacks is set to true.\n\"energy_target\": Set a target at the end of the model horizon for the storage's state of charge. Currently, the formulation only supports a fixed value per operation period. Additional variables for StorageEnergyShortageVariable and StorageEnergySurplusVariable are included in the model if use_slacks is set to true.","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"warning: Warning\nCombining cycle limits and energy target attributes is not recommended. Both attributes impose constraints on energy. There is no guarantee that the constraints can be satisfied simultaneously.","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"\"complete_coverage\": This attribute implements constraints that require the battery to cover the sum of all the ancillary services it participates in simultaneously. It is equivalent to holding energy in case all the services get deployed simultaneously. This constraint is added to the constraints that cover each service independently and corresponds to a more conservative operation regime.\n\"regularization\": This attribute smooths the charge/discharge profiles to avoid bang-bang solutions via a penalty on the absolute value of the intra-temporal variations of the charge and discharge power. Solving for optimal storage dispatch can stall in models with large amounts of curtailment or long periods with negative or zero prices due to numerical degeneracy. The regularization term is scaled by the storage device's power limits to normalize the term and avoid additional penalties to larger storage units.","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"danger: Danger\nSetting the energy target attribute in combination with EnergyTargetFeedforward or EnergyLimitFeedforward is not permitted and StorageSystemsSimulations will throw an exception.","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Mathematical-Model","page":"StorageDispatchWithReserves","title":"Mathematical Model","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/#Sets","page":"StorageDispatchWithReserves","title":"Sets","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    mathcalP^textas_textup  textUp Ancillary Service Products Set\n    mathcalP^textas_textdn  textDown Ancillary Service Products Set\n    mathcalP^textas = bigcupleft mathcalP^textas_textup mathcalP^textas_textdnright  textAncillary Service Products Set\n    mathcalT = 1dotsT  textTime steps \nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Parameters","page":"StorageDispatchWithReserves","title":"Parameters","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/#Operational-Parameters","page":"StorageDispatchWithReserves","title":"Operational Parameters","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    P^maxch_st textMax Charge Power Storage MW\n    P^maxds_st textMax Discharge Power Storage MW\n    eta^ch_st textCharge Efficiency Storage hr\n    eta^ds_st textDischarge Efficiency Storage hr\n    R^*_p t textAncillary Service deployment Forecast at time t for service p in mathcalP^textas MW\n    E^max_st textMax Energy Storage Capacity MWh\n    E^st_0 textStorage initial energy MWh\n    E^st_T textStorage Energy Target at the end of the horizon ie time-step T MWh\n    Delta t  textTimestep length\n    C_st  textMaximum number of cycles over the horizon \n     textFor DA the value is fixed to 3 and in RT the value depends on the DA allocation of cycles \n    N_p  textNumber of periods of compliance to supply an AS\n     textFor example Spinning reserve has 12 for 1 hour of compliance when Delta_t is 5-minutes\nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Cost-Parameters","page":"StorageDispatchWithReserves","title":"Cost Parameters","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    textVOM textStorage Variable Operation and Maintenance Cost MWh\n    rho^e+ textStorage Surplus penalty at end of target cost MWh Used when textttuse_slacks = true\n    rho^e- textStorage Shortage penalty at end of target cost MWh Used when textttuse_slacks = true\n    rho^c textStorage Cycling Penalty MWh Used when textttuse_slacks = true\n    rho^z textRegularization Terms Penalty Used when textttregularization = true\nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Variables","page":"StorageDispatchWithReserves","title":"Variables","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    p^st ch_t   in 0 P^maxch_st quadtextExpected Storage charging power\n    p^st ds_t   in 0 P^maxds_st quadtextExpected Storage discharging power\n    e^st_t   in 0 E^max_st quad textExpected Storage Energy\n    textss^st_t   in  0 1  quad textChargeDischarge status Storage Used when textttreservation = true\n    sb_stcpt  in 0 P^maxch_st  quad textAncillary service fraction assigned to Storage Charging\n    sb_stdpt  in 0 P^maxds_st  quad textAncillary service fraction assigned to Storage Discharging\n    e^st+   in 0 E^max_st quad textStorage Energy Surplus above target Used when textttuse_slacks = true\n    e^st-   in 0 E^max_st quad textStorage Energy Shortage below target Used when textttuse_slacks = true\n    c^ch-   in 0 T C_st quad textCharging Cycling Shortage Used when textttuse_slacks = true\n    c^ds-   in 0 T C_st quad textDischarging Cycling Shortage Used when textttuse_slacks = true\n    z^st ch_t  in 0 P^maxch_st quad textRegularization charge variable Used when textttregularization = true\n    z^st ds_t  in 0 P^maxds_st quad textRegularization discharge variable Used when textttregularization = true\nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Model","page":"StorageDispatchWithReserves","title":"Model","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginaligned\nmin_substackboldsymbolp^st ch boldsymbolp^st ds boldsymbole^st  e^st+ e^st- c^ch- + c^ds-\n rho^e+ e^st+ + rho^e- e^st- + rho^c left(c^ch- + c^ds- right) + rho^z left(fracz^chP^maxch_st + fracz^dsP^maxds_st right)\n +Delta t sum_t in mathcalT textVOM_st left ( left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t right) + left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_tright) right) \nendaligned","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginaligned\ntextst   \ntextPower Limit Constraints\np^st ch_t + sum_p in mathcalP^textas_textdn sb_stcpt leq (1 - textss^st_t)P^maxch_st  quad forall t in mathcalT \n p^st ch_t - sum_p in mathcalP^textas_textup sb_stcpt geq 0  quad forall t in mathcalT\n p^st ds_t + sum_p in mathcalP^textas_textup sb_stdpt leq textss^st_tP^maxds_st  forall t in mathcalT\n p^st ds_t - sum_p in mathcalP^textas_textdn sb_stdpt geq 0  forall t in mathcalT\ntextEnergy Storage Limit Constraints\ne^st_t leq E^max_st  forall t in mathcalT\n e^st_t geq E^min_st  forall t in mathcalT\ntextEnergy Bookkeeping constraints\n E^st_0 + Delta t  left(sum_p in mathcalP^textas_textdn R^*_p1 sb_stcp1 + p^stch_1  - sum_p in mathcalP^textas_textup R^*_p1 sb_stcp1right)eta^ch_st\n-Delta tleft(sum_p in mathcalP^textas_textup R^*_p1 sb_stdp1 + p^stds_1 - sum_p in mathcalP^textas_textdn R^*_pt sb_stdp1right)frac1eta^ds_st=e^st_1\ne^st_t-1 + Delta t  left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright)eta^ch_st\n-Delta tleft(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright)frac1eta^ds_st =e^st_t  forall t in mathcalT setminus 1\ntextEnd of period energy target constraint Used when textttenergy_target = true\ne^st_T + e^st+ - e^st- = E^st_T\ntextStorage Cycling Limits Constraints Used when textttcycling_limits = true\n sum_t in mathcalT left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_tright)frac1eta^ds_st Delta t - c^ds- leq C_st E^max_st \n sum_t in mathcalT left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t right)eta^ch_st Delta t - c^ch- leq C_st E^max_st \ntextSingle Ancillary Services Energy Coverage\n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t  forall p in mathcalP^as_dn  forall t in mathcalT\n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st  forall p in mathcalP^as_up  forall t in mathcalT\n sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0  forall p in mathcalP^as_dn\n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t-1  forall p in mathcalP^as_dn  forall t in mathcalT setminus 1\nsb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0 - E^min_st  forall p in mathcalP^as_up\n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1 - E^min_st  forall p in mathcalP^as_up  forall t in mathcalT setminus 1 \ntextComplete Ancillary Services Energy Coverage Used when textttcomplete_coverage = true\n sum_p in mathcalP^textas_textdn  sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t  forall t in mathcalT\n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st  forall t in mathcalT\n sum_p in mathcalP^textas_textdn sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0 \nsum_p in mathcalP^textas_textdn  sb_stcpt eta^ch_st N_p Delta t le E_st^max - e^st_t-1  forall t in mathcalT setminus 1\nsum_p in mathcalP^textas_textup sb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0- E^min_st  \n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1- E^min_st  forall t in mathcalT setminus 1\ntextRegularization Constraints Used when textttregularization = true\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) \n - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) le z^st ch_t  forall t in mathcalT setminus 1\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) \n - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) ge -z^st ch_t  forall t in mathcalT setminus 1\nleft(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) \n-left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright) le z^st ds_t   forall t in mathcalT setminus 1\nleft(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) \n-left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright) ge -z^st ds_t   forall t in mathcalT setminus 1\nendaligned","category":"page"},{"location":"tutorials/simulation_tutorial/#sim_tutorial","page":"Simulating operations with StorageSystemSimulations","title":"Simulating operations with StorageSystemSimulations","text":"","category":"section"},{"location":"tutorials/simulation_tutorial/","page":"Simulating operations with StorageSystemSimulations","title":"Simulating operations with StorageSystemSimulations","text":"Originally Contributed by: Jose Daniel Lara","category":"page"},{"location":"tutorials/simulation_tutorial/#Introduction","page":"Simulating operations with StorageSystemSimulations","title":"Introduction","text":"","category":"section"},{"location":"tutorials/simulation_tutorial/#Load-Packages","page":"Simulating operations with StorageSystemSimulations","title":"Load Packages","text":"","category":"section"},{"location":"tutorials/simulation_tutorial/","page":"Simulating operations with StorageSystemSimulations","title":"Simulating operations with StorageSystemSimulations","text":"using PowerSystems\nusing PowerSimulations\nusing StorageSystemsSimulations\nusing PowerSystemCaseBuilder\nusing HiGHS # solver","category":"page"},{"location":"tutorials/simulation_tutorial/#Data","page":"Simulating operations with StorageSystemSimulations","title":"Data","text":"","category":"section"},{"location":"tutorials/simulation_tutorial/","page":"Simulating operations with StorageSystemSimulations","title":"Simulating operations with StorageSystemSimulations","text":"note: Note\nPowerSystemCaseBuilder.jl is a helper library that makes it easier to reproduce examples in the documentation and tutorials. Normally you would pass your local files to create the system data instead of calling the function build_system. For more details visit PowerSystemCaseBuilder Documentation","category":"page"},{"location":"tutorials/simulation_tutorial/","page":"Simulating operations with StorageSystemSimulations","title":"Simulating operations with StorageSystemSimulations","text":"c_sys5_bat = build_system(\n    PSITestSystems,\n    \"c_sys5_bat_ems\";\n    add_single_time_series=true,\n    add_reserves=true,\n)\norcd = get_component(ReserveDemandCurve, c_sys5_bat, \"ORDC1\")\nset_available!(orcd, false)","category":"page"}]
}
